var Resource = require('deployd/lib/resource')
	, util = require('util');
var ServiceDesk = require('gta-service-desk');

function ServiceDeskResource(name, options) {
	Resource.apply(this, arguments);
}

ServiceDeskResource.basicDashboard = {
	settings: [{
		name: 'apiKey',
		type: 'text',
		description: 'Service Desk API key https://desk.gotoassist.com/my_api_token'
	},{
		name: 'serviceId',
		type: 'text',
		description: 'ID of the default Service'
	}]
};

util.inherits(ServiceDeskResource, Resource);

ServiceDeskResource.label = "Service Desk";
ServiceDeskResource.events = ["post"];

module.exports = ServiceDeskResource;

ServiceDeskResource.prototype.clientGeneration = true;

ServiceDeskResource.prototype.log = function() {
	if(this.config.debugLogging) {
		console.log.apply(console, arguments);
	}
};

ServiceDeskResource.prototype.handle = function (ctx, next) {
	var serviceDesk, title, symptom, serviceId;

	if(!this.config.apiKey) {
		console.log('missing servicedesk apiKey');
		return next();
	}

	if ( ctx.req && ctx.req.method !== 'POST' ) {
		return next();
	}


	title = ctx.body.title;
	symptom = ctx.body.symptom;
	serviceId = ctx.body.serviceId;

	if(!serviceId && !this.config.serviceId) {
		console.log('missing servicedesk serviceId');
		return next();
	}

	if (!serviceId) {
		serviceId = this.config.serviceId;
	}

	if(!title || !symptom) {
		console.log('title: %s and symptom: %s values are not valid', title, symptom);
		return next();
	}

	console.log('valid servicedesk request for title: %s symptom: %s with serviceId: %s', title, symptom, serviceId)

	serviceDesk = new ServiceDesk(this.config.apiKey);

	function respondWith(done) {
		var err;

		if (!done) {
			err = "Something went wrong"
			done = { message:err };
		} else {
			err = false;
		}

		ctx.done(err, done);

	}

	serviceDesk.createIncident({
		"title": title,
		"symptom": symptom,
		"service_id": serviceId
	}, respondWith);

}